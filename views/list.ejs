<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/public/main.css" type="text/css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
    <title>DB_list</title>
    <style>
      .num {font-size: .88rem; color: rgb(37, 139, 37);}
      a {display: block; color: inherit;}
      a:hover {text-decoration: none; color: inherit; }
    </style>  

  </head>
  <body>
    <%- include('nav.html') %>

    <h2 class="ml-3 my-4 text-center mb-3">TODO LIST</h2>
    <div class="container input-group mb-4">
      <input class="form-control" id="search-input">
      <button class="input-group-append btn btn-danger" id="search">검색</button>
    </div>
    
    <ul class="list-group">
      <% for(let ele of posts){ %>
         <li class="list-group-item">            
           <a href="/detail/<%= ele._id %>">
             <p class="num">No) <%= ele._id %></p>
             <h5>할일 : <%= ele.todo %></h5>
             <h6>날짜 : <%= ele.date %></h6>
           </a>   
           <button type="button" data-id="<%= ele._id %>" class="btn btn-success delete">삭제</button>              
         </li>         
      <% } %>         
    </ul>
    
    

    <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js"></script>

    <script>
      // HTML폼에서 일반적으로 PUT, DELETE 요청을 할수는 없다. 
      // HTML폼 안에선 GET, POST 요청밖에 못날린다. 
      
      $('.delete').click((e) => {  // 함수안에서 this를 사용하고 싶다면 여기 ()=>{} 을 function(){}으로 바꿔주면 클릭한 객체를 가르킨다.
        const nowId = e.target.dataset.id;  // 지금 클릭한 요소의 data-id 속성값을 가져오세요.

        $.ajax({
         method : 'DELETE',
         url : '/delete',   // 요청할 경로.
         data : {_id : nowId},  // 요청과 함께 보낼 데이터.  
         }).done((result) => { 
            // ajax요청이 성공했을때 실행할 코드
            console.log('성공 했습니다.');
            $(e.target).parent('li').fadeOut();  // arrow펑션 안에서 this를 쓰면 최상위객체 window를 가르킨다. 그래서 e.target으로 바꿔주었다.
            
            // e.target : 내가 클릭한것.
            // $(this)  : 현재 이벤트가 동작하는 곳.
         }).fail((xhr, code, err) => {
           // 3개의 파라미터는 차례로 jQuery의 XMLHttpRequest, 에러코드, 에러메세지 이다.
           // ajax요청이 실패했을때 실행할 코드
           window.alert('다른 작성자의 글은 삭제할수 없습니다.');
         })
      });
      
      // $(this)는 $(e.target)으로 대체 가능하다.(지금 누른것)
      // 하지만 e.target이나 this같은 키워드 뒤에 jQuery함수를 붙이고 싶다면 $()안에 싸매야한다.


      
      // GET요청으로 서버에게 데이터 보내는 법
      // Query string 작성해서 GET 요청하기
      $('#search').click(() => {
         let inputVal = $('#search-input').val();
         window.location.replace(`/search?value=${inputVal}`);
      });
      // 검색버튼 누르면 현재 URL주소를 /search?value=입력한값 으로 바꾸라고 코드를짬.
      // URL주소 변경하는게 GET요청이랑 똑같은 짓이기 때문에
      // 검색버튼 누르는 순간 /search로 GET요청을 날리게 되고
      // value: 입력한값 이라는 정보가 서버로 전달된다. 끝!

      // (참고) 프론트엔드에서 Query string을 쉽게 만들려면
      // jQuery 문법중에 param, serialize를 쓰면 된다.
      let query = {이름1: '값1', 이름2: '값2'};
      let queryString = $.param(query); // 이름1=값1&이름2=값2 이게 남음.
      // 이렇게 하면 object자료를 query string으로 쉽게 변환가능하고

      let queryString2 = $('폼태그를찾고').serialize();
      // 이렇게 하면 폼태그 안에있는 모든 <input>을 query string으로 쉽게 변환해준다.
      // 다만 <input>에 name속성이 있어야한다.







    </script>



    <!-- Optional JavaScript; choose one of the two! -->
    <!-- Option 1: jQuery and Bootstrap Bundle (includes Popper) -->
    
    <!-- Option 2: Separate Popper and Bootstrap JS -->   
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.min.js" integrity="sha384-+sLIOodYLS7CIrQpBjl+C7nPvqq+FbNUBDunl/OZv93DB7Ln/533i8e/mZXLi/P+" crossorigin="anonymous"></script>
  </body>
</html>






